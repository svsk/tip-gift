generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma-app/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wish {
  Id          String    @id @default(uuid()) @db.Uuid
  Name        String?
  Description String?
  Price       Int
  Order       Int
  Link        String?
  UserId      String    @db.Uuid
  GroupId     String    @db.Uuid
  ImageUrl    String?
  DeletedDate DateTime? @db.Timestamptz(3)
  CreatedDate DateTime  @default(now()) @db.Timestamptz(3)
}

model WishUser {
  Id                String  @id @default(uuid()) @db.Uuid
  Email             String
  Name              String?
  AvatarEmoji       String? @db.VarChar(24)
  AvatarColour      String? @db.VarChar(24)
  PreferredLanguage String? @db.VarChar(50)
}

model WishPurchase {
  Id                   String    @id @default(uuid()) @db.Uuid
  UserId               String    @db.Uuid
  WishId               String?   @db.Uuid
  GroupId              String?   @db.Uuid
  CreatedDate          DateTime  @default(now()) @db.Timestamptz(3)
  PurchasedDate        DateTime? @db.Timestamptz(3)
  WrappedDate          DateTime? @db.Timestamptz(3)
  GivenDate            DateTime? @db.Timestamptz(3)
  ShipmentReceivedDate DateTime? @db.Timestamptz(3)
  IsCustom             Boolean   @default(false)
  ReceiverName         String?   @db.VarChar(255)
  CustomName           String?   @db.VarChar(255)
  DeletedDate          DateTime? @db.Timestamptz(3)
  DeletedByUserId      String?   @db.Uuid
}

model WishUserGroup {
  Id              String  @id @default(uuid()) @db.Uuid
  GroupName       String
  CreatedByUserId String? @db.Uuid
  AvatarEmoji     String? @db.VarChar(24)
  AvatarColour    String? @db.VarChar(24)
  InviteCode      String? @db.VarChar(255)
}

model WishUserGroupUser {
  Id              String    @id @default(uuid()) @db.Uuid
  GroupId         String    @db.Uuid
  UserId          String    @db.Uuid
  LastVisitedDate DateTime  @default(now()) @db.Timestamptz(3)
  DeletedDate     DateTime? @db.Timestamptz(3)
  DeletedByUserId String?   @db.Uuid
}

model WishListShare {
  Id          String   @id @default(uuid()) @db.Uuid
  UserId      String   @db.Uuid
  UniqueKey   String   @unique @db.VarChar(20)
  Slug        String
  Name        String
  CreatedDate DateTime @default(now()) @db.Timestamptz(3)
  GroupId     String?  @db.Uuid
}

model WishGroupWish {
  Id                       String    @id @default(uuid()) @db.Uuid
  GroupId                  String    @db.Uuid
  WishId                   String    @db.Uuid
  WishGroupCollaborationId String?   @db.Uuid
  DeletedDate              DateTime? @db.Timestamptz(3)
  DeletedByUserId          String?   @db.Uuid
}

model WishGiftTag {
  Id             String  @id @default(uuid()) @db.Uuid
  UserId         String  @db.Uuid
  WishPurchaseId String  @db.Uuid
  FromText       String? @db.VarChar(500)
  ToText         String? @db.VarChar(500)
}

model WishGroupCollaboration {
  Id              String    @id @default(uuid()) @db.Uuid
  WishUserGroupId String    @db.Uuid
  Title           String?
  AvatarColour    String?   @db.VarChar(24)
  AvatarEmoji     String?   @db.VarChar(24)
  CreatedByUserId String?   @db.Uuid
  CreatedDate     DateTime  @default(now()) @db.Timestamptz(3)
  DeletedByUserId String?   @db.Uuid
  DeletedDate     DateTime? @db.Timestamptz(3)
}

model WishGroupCollaborationMember {
  Id                       String    @id @default(uuid()) @db.Uuid
  WishUserGroupId          String    @db.Uuid
  WishGroupCollaborationId String    @db.Uuid
  UserId                   String    @db.Uuid
  IsAdmin                  Boolean
  CreatedDate              DateTime  @default(now()) @db.Timestamptz(3)
  CreatedByUserId          String    @db.Uuid
  DeletedDate              DateTime? @db.Timestamptz(3)
  DeletedByUserId          String?   @db.Uuid
}

model WishPurchaseNote {
  Id              String    @id @default(uuid()) @db.Uuid
  WishPurchaseId  String    @db.Uuid
  Note            String    @db.VarChar(150)
  CreatedDate     DateTime  @default(now()) @db.Timestamptz(3)
  CreatedByUserId String    @db.Uuid
  DeletedDate     DateTime? @db.Timestamptz(3)
  DeletedByUserId String?   @db.Uuid
}
